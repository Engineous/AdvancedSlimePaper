--- a/net/minecraft/server/level/ServerChunkCache.java
+++ b/net/minecraft/server/level/ServerChunkCache.java
@@ -181,8 +_,10 @@
     }
     // Paper end - chunk tick iteration optimisations
 
+   public final com.infernalsuite.asp.level.SlimeBootstrap bootstrap; //ASP
 
     public ServerChunkCache(
+        com.infernalsuite.asp.level.SlimeBootstrap bootstrap, //ASP
         ServerLevel level,
         LevelStorageSource.LevelStorageAccess levelStorageAccess,
         DataFixer fixerUpper,
@@ -196,6 +_,7 @@
         ChunkStatusUpdateListener chunkStatusListener,
         Supplier<DimensionDataStorage> overworldDataStorage
     ) {
+        this.bootstrap = bootstrap; //ASP
         this.level = level;
         this.mainThreadProcessor = new ServerChunkCache.MainThreadExecutor(level);
         this.mainThread = Thread.currentThread();
