From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: David Mayr <davidliebtkekse@gmail.com>
Date: Thu, 5 Dec 2024 01:41:21 +0100
Subject: [PATCH] Fix missing chunks & entities when chunk saving


diff --git a/src/main/java/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java b/src/main/java/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java
index 62b526f7e147586977615ec8cec191d0aaf0bcdc..ad7c19ceb42da90bd995421be7fb764aa7ee48e0 100644
--- a/src/main/java/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java
+++ b/src/main/java/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java
@@ -897,6 +897,13 @@ public final class NewChunkHolder {
 
         final boolean shouldLevelChunkNotSave = PlatformHooks.get().forceNoSave(chunk);
 
+        // ASP start - Chunk unloading
+        if (world instanceof com.infernalsuite.asp.level.SlimeLevelInstance slime && chunk instanceof LevelChunk levelChunk) {
+            //The custom entity slices need to be passed on for entities to be saved
+            slime.onChunkUnloaded(levelChunk, entityChunk);
+        }
+        // ASP end - Chunk unloading
+
         // unload chunk data
         if (chunk != null) {
             if (chunk instanceof LevelChunk levelChunk) {
diff --git a/src/main/java/com/infernalsuite/asp/level/NMSSlimeChunk.java b/src/main/java/com/infernalsuite/asp/level/NMSSlimeChunk.java
index fcdc22a4c107d2a9f4756a473e2b570a4d29b495..17f99470787fa3d6709c892911d33a0a8ea1aadd 100644
--- a/src/main/java/com/infernalsuite/asp/level/NMSSlimeChunk.java
+++ b/src/main/java/com/infernalsuite/asp/level/NMSSlimeChunk.java
@@ -64,11 +64,18 @@ public class NMSSlimeChunk implements SlimeChunk {
     private final CompoundBinaryTag extra;
     private final CompoundBinaryTag upgradeData;
 
+    private final ChunkEntitySlices entitySlices;
+
     public NMSSlimeChunk(LevelChunk chunk, SlimeChunk reference) {
+        this(chunk, reference, null);
+    }
+
+    public NMSSlimeChunk(LevelChunk chunk, SlimeChunk reference, ChunkEntitySlices slices) {
         this.chunk = chunk;
         this.extra = reference == null ? CompoundBinaryTag.empty() : reference.getExtraData();
         this.extra.put("ChunkBukkitValues", Converter.convertTag(chunk.persistentDataContainer.toTagCompound()));
         this.upgradeData = reference == null ? null : reference.getUpgradeData();
+        this.entitySlices = slices;
     }
 
     @Override
@@ -157,9 +164,7 @@ public class NMSSlimeChunk implements SlimeChunk {
     public List<CompoundBinaryTag> getEntities() {
         List<CompoundTag> entities = new ArrayList<>();
 
-        if (this.chunk == null || this.chunk.getChunkHolder() == null) return new ArrayList<>();
-
-        ChunkEntitySlices slices = this.chunk.getChunkHolder().getEntityChunk();
+        ChunkEntitySlices slices = getEntitySlices();
         if (slices == null) return new ArrayList<>();
 
         // Work by <gunther@gameslabs.net>
@@ -175,6 +180,16 @@ public class NMSSlimeChunk implements SlimeChunk {
         return Lists.transform(entities, Converter::convertTag);
     }
 
+    private ChunkEntitySlices getEntitySlices() {
+        if (this.entitySlices != null) return this.entitySlices;
+
+        if (this.chunk == null || this.chunk.getChunkHolder() == null) {
+            return null;
+        }
+
+        return this.chunk.getChunkHolder().getEntityChunk();
+    }
+
     @Override
     public CompoundBinaryTag getExtraData() {
         return extra;
diff --git a/src/main/java/com/infernalsuite/asp/level/SlimeChunkLevel.java b/src/main/java/com/infernalsuite/asp/level/SlimeChunkLevel.java
index a92d17b5c6a7c8427ecbdf56a9c2a0c1b66978e4..6313b235eb8ccbd63b57159964ba33d36db51933 100644
--- a/src/main/java/com/infernalsuite/asp/level/SlimeChunkLevel.java
+++ b/src/main/java/com/infernalsuite/asp/level/SlimeChunkLevel.java
@@ -19,12 +19,6 @@ public class SlimeChunkLevel extends LevelChunk {
         this.inMemoryWorld = world.slimeInstance;
     }
 
-    @Override
-    public void unloadCallback() {
-        super.unloadCallback();
-        this.inMemoryWorld.unload(this);
-    }
-
     @Override
     public void loadCallback() {
         super.loadCallback();
diff --git a/src/main/java/com/infernalsuite/asp/level/SlimeInMemoryWorld.java b/src/main/java/com/infernalsuite/asp/level/SlimeInMemoryWorld.java
index e6da199bf2179d8820c6e38725cea5f867031f15..77526b601745287cc309f4cda0a8093d871e888e 100644
--- a/src/main/java/com/infernalsuite/asp/level/SlimeInMemoryWorld.java
+++ b/src/main/java/com/infernalsuite/asp/level/SlimeInMemoryWorld.java
@@ -103,11 +103,11 @@ public class SlimeInMemoryWorld implements SlimeWorld, SlimeWorldInstance {
 
     // Authored by: Kenox <muranelp@gmail.com>
     // Don't use the NMS live chunk in the chunk map
-    public void unload(LevelChunk providedChunk) {
+    public void unload(LevelChunk providedChunk, ca.spottedleaf.moonrise.patches.chunk_system.level.entity.ChunkEntitySlices entitySlices) {
         final int x = providedChunk.locX;
         final int z = providedChunk.locZ;
 
-        SlimeChunk chunk = new NMSSlimeChunk(providedChunk, getChunk(x, z));
+        SlimeChunk chunk = new NMSSlimeChunk(providedChunk, getChunk(x, z), entitySlices);
 
         if (FastChunkPruner.canBePruned(this.liveWorld, providedChunk)) {
             this.chunkStorage.remove(Util.chunkPosition(x, z));
diff --git a/src/main/java/com/infernalsuite/asp/level/SlimeLevelInstance.java b/src/main/java/com/infernalsuite/asp/level/SlimeLevelInstance.java
index 9d15ab96bc72e5efffe443088ef482d4ec0e9457..1c5798fd15a61b6721df97214494788e9873c68c 100644
--- a/src/main/java/com/infernalsuite/asp/level/SlimeLevelInstance.java
+++ b/src/main/java/com/infernalsuite/asp/level/SlimeLevelInstance.java
@@ -201,9 +201,7 @@ public class SlimeLevelInstance extends ServerLevel {
         propertyMap.setValue(SlimeProperties.SPAWN_YAW, angle);
     }
 
-    @Override
-    public void unload(LevelChunk chunk) {
-        this.slimeInstance.unload(chunk);
-        super.unload(chunk);
+    public void onChunkUnloaded(LevelChunk chunk, ca.spottedleaf.moonrise.patches.chunk_system.level.entity.ChunkEntitySlices entityChunk) {
+        this.slimeInstance.unload(chunk, entityChunk);
     }
 }
\ No newline at end of file
